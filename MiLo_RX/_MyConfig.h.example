/*
   This file is meant to keep your settings after an upgrade of the milo rx source.
   If you know parameters you want for sure to be enabled or disabled in future
   then just force their values here.
   To enable  a setting use #define <setting name>
   To disable a setting use #undef  <setting name>
*/

// For example you can also define multiple module configurations, uncomment the one you want to compile for:
#define Module_1
//#define Module_2

//Example on how to force the "Failsafe from TX" feature for all modules
#define TX_FAILSAFE

#if defined Module_1
	// how to force a specific hardware
    #undef EL24P//flywoo RX
    #define DIY_RX
    #undef MATEK_RX_R24D
    #undef MATEK_RX_R24S
    #undef BETA_FPV_RX_NANO // or Cycloon clone
    #undef NAMIMNO_RX_NANO_FLASH
    #undef ESP8266_E28_2G4M20S

    #define MSW_SERIAL                 // use software serial (with interrupts) to send and receive Sport data on the sport bus
    #undef HC_BIND
    #undef USER_MAX_POWER           // limit the max power to the value specified here (can be less than what is allowed by the module)
    #define TELEMETRY                  // use RF frames between TX and RX (for uplink or downlink (link quality and/or sensor data))   
    #undef SWAMPING
    #undef RSSI_AVG
    #define SPORT_TELEMETRY            // 
    #define TX_FAILSAFE                // accept to let the Tx define the failsafe values (otherwise they can be defined on RX level)
    #define FAILSAFE                   // apply failsafe values (on Sbus and PWM) when connection is lost

    #undef MinPower PWR_10mW
    #undef MaxPower PWR_100mW
    #define SBUS                       // let RX generates Sbus signal with RC channels
    #undef  PWM_SERVO                // let RX generates PWM signals for the servo
    #undef  ADC_VOLT
    #define STATISTIC
    #undef SERVO_RATE
    #undef PARALLEL_SERVO
    #undef USE_WIFI                 // allow to activate the wifi for firmware updates

#elif defined Module_2
	//Example of a module which doesn't need wifi updata but still use the default hardware defined in _config.h
	#undef USE_WIFI

#endif
